{"ast":null,"code":"import _slicedToArray from \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\src\\\\client\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Redirect } from \"react-router-dom\";\nimport styledComponents from \"./styled-components/styledComponents\";\nimport { ApolloClient, ApolloLink, InMemoryCache, HttpLink } from 'apollo-boost';\nimport { ApolloProvider } from \"react-apollo\";\nimport Nav from \"./components/nav\";\nimport Routes from \"./components/routes\";\nimport AuthContext from \"./context/AuthContext\";\nimport functions from \"./functions/functions\";\nvar Wrapper = styledComponents.Wrapper;\nvar verifyToken = functions.verifyToken,\n    readToken = functions.readToken,\n    writeToken = functions.writeToken,\n    readUrl = functions.readUrl;\nvar httpLink = new HttpLink(\"http://localhost:8000/graphql\");\nvar authLink = new ApolloLink(function (operation, forward) {\n  var token = readToken();\n  operation.setContext({\n    headers: {\n      Authorization: token ? \"Bearer \".concat(token) : ''\n    }\n  });\n  return forward(operation);\n});\n\nvar App = function App() {\n  var client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    // Chain it with the HttpLink\n    cache: new InMemoryCache(),\n    defaultOptions: {\n      watchQuery: {\n        errorPolicy: 'all'\n      },\n      query: {\n        errorPolicy: 'all'\n      },\n      mutate: {\n        errorPolicy: 'all'\n      }\n    }\n  });\n\n  var _useState = useState({\n    userId: null,\n    email: null,\n    exp: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      auth = _useState2[0],\n      setAuth = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAuthed = _useState4[0],\n      setIsAuthed = _useState4[1];\n\n  var login = function login(_ref) {\n    var userId = _ref.userId,\n        email = _ref.email,\n        exp = _ref.exp;\n    setAuth({\n      userId: userId,\n      email: email,\n      exp: exp\n    });\n    setIsAuthed(true);\n    futureVerification(exp);\n  };\n\n  var logout = function logout() {\n    setAuth({\n      userId: null,\n      email: null,\n      exp: null\n    });\n    setIsAuthed(false);\n    writeToken(\"null\");\n  };\n\n  var futureVerification = function futureVerification(exp) {\n    var difference = exp * 1000 - new Date().getTime() + 10000;\n    setTimeout(function () {\n      verifyToken().then(function (res) {\n        if (!res) {\n          logout();\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }, difference);\n  }; //persist url on page refresh\n\n\n  useEffect(function () {\n    var prevUrl = readUrl();\n\n    if (prevUrl) {\n      return React.createElement(Redirect, {\n        to: \"{prevUrl}\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    }\n  }, []);\n  useEffect(function () {\n    verifyToken().then(function (res) {\n      if (res) {\n        login(res);\n      }\n    });\n  }, []);\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(AuthContext.Provider, {\n    value: {\n      auth: auth,\n      login: login,\n      logout: logout,\n      isAuthed: isAuthed,\n      client: client\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["A:\\HTML 5\\graphQL\\code\\project-create-react-app\\post-system\\src\\client\\App.js"],"names":["React","useState","useEffect","BrowserRouter","Redirect","styledComponents","ApolloClient","ApolloLink","InMemoryCache","HttpLink","ApolloProvider","Nav","Routes","AuthContext","functions","Wrapper","verifyToken","readToken","writeToken","readUrl","httpLink","authLink","operation","forward","token","setContext","headers","Authorization","App","client","link","concat","cache","defaultOptions","watchQuery","errorPolicy","query","mutate","userId","email","exp","auth","setAuth","isAuthed","setIsAuthed","login","futureVerification","logout","difference","Date","getTime","setTimeout","then","res","catch","err","console","log","prevUrl"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,aAAnC,EAAkDC,QAAlD,QAAkE,cAAlE;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;IAEQC,O,GAAYV,gB,CAAZU,O;IACAC,W,GAAgDF,S,CAAhDE,W;IAAaC,S,GAAmCH,S,CAAnCG,S;IAAWC,U,GAAwBJ,S,CAAxBI,U;IAAYC,O,GAAYL,S,CAAZK,O;AAE5C,IAAMC,QAAQ,GAAG,IAAIX,QAAJ,CAAa,+BAAb,CAAjB;AACA,IAAMY,QAAQ,GAAG,IAAId,UAAJ,CAAgB,UAAEe,SAAF,EAAaC,OAAb,EAA0B;AACxD,MAAMC,KAAK,GAAGP,SAAS,EAAvB;AACAK,EAAAA,SAAS,CAACG,UAAV,CAAsB;AACnBC,IAAAA,OAAO,EAAE;AACNC,MAAAA,aAAa,EAAEH,KAAK,oBAAaA,KAAb,IAAuB;AADrC;AADU,GAAtB;AAKA,SAAOD,OAAO,CAAED,SAAF,CAAd;AACF,CARgB,CAAjB;;AAWA,IAAMM,GAAG,GAAG,SAANA,GAAM,GAAM;AAEf,MAAMC,MAAM,GAAG,IAAIvB,YAAJ,CAAkB;AAC9BwB,IAAAA,IAAI,EAAET,QAAQ,CAACU,MAAT,CAAiBX,QAAjB,CADwB;AACK;AACnCY,IAAAA,KAAK,EAAE,IAAIxB,aAAJ,EAFuB;AAG9ByB,IAAAA,cAAc,EAAE;AACbC,MAAAA,UAAU,EAAE;AACTC,QAAAA,WAAW,EAAE;AADJ,OADC;AAIbC,MAAAA,KAAK,EAAE;AACJD,QAAAA,WAAW,EAAE;AADT,OAJM;AAObE,MAAAA,MAAM,EAAE;AACLF,QAAAA,WAAW,EAAE;AADR;AAPK;AAHc,GAAlB,CAAf;;AAFe,kBAkBWlC,QAAQ,CAAE;AAAEqC,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,KAAK,EAAE,IAAvB;AAA6BC,IAAAA,GAAG,EAAE;AAAlC,GAAF,CAlBnB;AAAA;AAAA,MAkBPC,IAlBO;AAAA,MAkBDC,OAlBC;;AAAA,mBAmBmBzC,QAAQ,CAAE,KAAF,CAnB3B;AAAA;AAAA,MAmBP0C,QAnBO;AAAA,MAmBGC,WAnBH;;AAqBf,MAAMC,KAAK,GAAG,SAARA,KAAQ,OAA8B;AAAA,QAA1BP,MAA0B,QAA1BA,MAA0B;AAAA,QAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,QAAXC,GAAW,QAAXA,GAAW;AACzCE,IAAAA,OAAO,CAAE;AAAEJ,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,KAAK,EAALA,KAAV;AAAiBC,MAAAA,GAAG,EAAHA;AAAjB,KAAF,CAAP;AACAI,IAAAA,WAAW,CAAE,IAAF,CAAX;AACAE,IAAAA,kBAAkB,CAAEN,GAAF,CAAlB;AACF,GAJD;;AAKA,MAAMO,MAAM,GAAG,SAATA,MAAS,GAAM;AAClBL,IAAAA,OAAO,CAAE;AAAEJ,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,KAAK,EAAE,IAAvB;AAA6BC,MAAAA,GAAG,EAAE;AAAlC,KAAF,CAAP;AACAI,IAAAA,WAAW,CAAE,KAAF,CAAX;AACA1B,IAAAA,UAAU,CAAE,MAAF,CAAV;AACF,GAJD;;AAMA,MAAM4B,kBAAkB,GAAG,SAArBA,kBAAqB,CAAEN,GAAF,EAAW;AACnC,QAAMQ,UAAU,GAAOR,GAAG,GAAG,IAAR,GAAmB,IAAIS,IAAJ,GAAWC,OAAX,EAArB,GAAgD,KAAnE;AACAC,IAAAA,UAAU,CAAE,YAAM;AACfnC,MAAAA,WAAW,GAAGoC,IAAd,CAAoB,UAAAC,GAAG,EAAI;AAAE,YAAK,CAACA,GAAN,EAAY;AAAEN,UAAAA,MAAM;AAAI;AAAE,OAAvD,EACIO,KADJ,CACW,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAaF,GAAb,CAAJ;AAAA,OADd;AAEF,KAHS,EAGPP,UAHO,CAAV;AAIF,GAND,CAhCe,CAwCf;;;AACA9C,EAAAA,SAAS,CAAE,YAAM;AACd,QAAMwD,OAAO,GAAGvC,OAAO,EAAvB;;AACA,QAAKuC,OAAL,EAAe;AAAE,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAoC;AACvD,GAHQ,EAGN,EAHM,CAAT;AAKAxD,EAAAA,SAAS,CAAE,YAAM;AACdc,IAAAA,WAAW,GAAGoC,IAAd,CAAoB,UAAAC,GAAG,EAAI;AACxB,UAAKA,GAAL,EAAW;AAAER,QAAAA,KAAK,CAAEQ,GAAF,CAAL;AAAc;AAC7B,KAFD;AAGF,GAJQ,EAIN,EAJM,CAAT;AAOA,SACG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAExB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAG;AAACY,MAAAA,IAAI,EAAJA,IAAD;AAAOI,MAAAA,KAAK,EAALA,KAAP;AAAcE,MAAAA,MAAM,EAANA,MAAd;AAAsBJ,MAAAA,QAAQ,EAARA,QAAtB;AAAgCd,MAAAA,MAAM,EAANA;AAAhC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADH,CADH,CADH,CADH;AAYF,CAjED;;AAsEA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { BrowserRouter, Redirect } from \"react-router-dom\"\r\nimport styledComponents from \"./styled-components/styledComponents\"\r\nimport { ApolloClient, ApolloLink, InMemoryCache, HttpLink } from 'apollo-boost';\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport Nav from \"./components/nav\"\r\nimport Routes from \"./components/routes\"\r\nimport AuthContext from \"./context/AuthContext\"\r\nimport functions from \"./functions/functions\"\r\n\r\nconst { Wrapper } = styledComponents\r\nconst { verifyToken, readToken, writeToken, readUrl } = functions\r\n\r\nconst httpLink = new HttpLink(\"http://localhost:8000/graphql\");\r\nconst authLink = new ApolloLink( ( operation, forward ) => {\r\n   const token = readToken();\r\n   operation.setContext( {\r\n      headers: {\r\n         Authorization: token ? `Bearer ${token}` : ''\r\n      }\r\n   } );\r\n   return forward( operation );\r\n} );\r\n\r\n\r\nconst App = () => {\r\n\r\n   const client = new ApolloClient( {\r\n      link: authLink.concat( httpLink ), // Chain it with the HttpLink\r\n      cache: new InMemoryCache(),\r\n      defaultOptions: {\r\n         watchQuery: {\r\n            errorPolicy: 'all'\r\n         },\r\n         query: {\r\n            errorPolicy: 'all',\r\n         },\r\n         mutate: {\r\n            errorPolicy: 'all'\r\n         }\r\n      }\r\n   } );\r\n\r\n   const [ auth, setAuth ] = useState( { userId: null, email: null, exp: null } )\r\n   const [ isAuthed, setIsAuthed ] = useState( false )\r\n\r\n   const login = ( { userId, email, exp } ) => {\r\n      setAuth( { userId, email, exp } )\r\n      setIsAuthed( true )\r\n      futureVerification( exp )\r\n   }\r\n   const logout = () => {\r\n      setAuth( { userId: null, email: null, exp: null } )\r\n      setIsAuthed( false )\r\n      writeToken( \"null\" )\r\n   }\r\n\r\n   const futureVerification = ( exp ) => {\r\n      const difference = ( ( exp * 1000 ) - ( new Date().getTime() ) ) + 10000\r\n      setTimeout( () => {\r\n         verifyToken().then( res => { if ( !res ) { logout() } } )\r\n            .catch( err => console.log( err ) )\r\n      }, difference )\r\n   }\r\n\r\n   //persist url on page refresh\r\n   useEffect( () => {\r\n      const prevUrl = readUrl();\r\n      if ( prevUrl ) { return <Redirect to=\"{prevUrl}\" /> }\r\n   }, [] )\r\n\r\n   useEffect( () => {\r\n      verifyToken().then( res => {\r\n         if ( res ) { login( res ) }\r\n      } )\r\n   }, [] )\r\n\r\n\r\n   return (\r\n      <BrowserRouter>\r\n         <ApolloProvider client={client}>\r\n            <AuthContext.Provider value={ {auth, login, logout, isAuthed, client} } >\r\n               <Wrapper>\r\n                  <Nav />\r\n                  <Routes />\r\n               </Wrapper>\r\n            </AuthContext.Provider>\r\n         </ApolloProvider>\r\n      </BrowserRouter>\r\n   )\r\n}\r\n\r\n\r\n\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}