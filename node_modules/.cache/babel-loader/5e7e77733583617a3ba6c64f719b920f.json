{"ast":null,"code":"import _taggedTemplateLiteral from \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\src\\\\client\\\\components\\\\login.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query Login($email: String!, $password: String!) {\\n\\t\\tlogin(email: $email, password: $password) {\\n\\t\\t\\tuserId\\n\\t\\t\\temail\\n\\t\\t\\texp\\n\\t\\t\\ttoken\\n\\t\\t\\terror\\n\\t\\t}\\n\\n\\t}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, createRef, useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport gql from \"graphql-tag\";\nimport { ApolloConsumer } from 'react-apollo';\nimport functions from \"../functions/functions\";\nimport styledComponents from \"../styled-components/styledComponents\";\nvar Content = styledComponents.Content,\n    LoginForm = styledComponents.LoginForm,\n    LoginInput = styledComponents.LoginInput,\n    LoginButton = styledComponents.LoginButton,\n    AuthNotice = styledComponents.AuthNotice,\n    H1 = styledComponents.H1,\n    P = styledComponents.P,\n    A = styledComponents.A;\nvar writeToken = functions.writeToken;\n\nvar Login = function Login(props) {\n  var value = useContext(AuthContext);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      authNotice = _useState2[0],\n      setAuthNotice = _useState2[1];\n\n  var email = createRef(),\n      password = createRef();\n  useEffect(function () {\n    try {\n      if (props.location.state.authNotice) {\n        setAuthNotice(props.location.state.authNotice);\n      }\n    } catch (err) {\n      return;\n    }\n  });\n  var reqBody = gql(_templateObject());\n  return React.createElement(ApolloConsumer, {\n    errorPolicy: \"all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, function (client) {\n    return React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(LoginForm, {\n      onSubmit: function onSubmit(event) {\n        event.preventDefault();\n        client.query({\n          query: reqBody,\n          variables: {\n            email: email.current.value,\n            password: password.current.value\n          },\n          watchQuery: {\n            errorPolicy: 'all'\n          }\n        }).then(function (res) {\n          if (res.data.login.error) {\n            setAuthNotice(res.data.login.error);\n          } else {\n            var tok = res.data.login.token;\n            writeToken(tok);\n            value.login(res.data.login);\n            props.history.push(\"/members/posts\");\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(H1, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Login to Member Area\"), authNotice ? React.createElement(AuthNotice, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, authNotice) : null, React.createElement(LoginInput, {\n      type: \"email\",\n      required: true,\n      maxlength: \"30\",\n      name: \"email\",\n      placeholder: \"Email...\",\n      ref: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(LoginInput, {\n      type: \"password\",\n      required: true,\n      maxlength: \"30\",\n      name: \"password\",\n      placeholder: \"Password...\",\n      ref: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(LoginButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(P, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Don\\u2019t have an account yet? \", React.createElement(A, {\n      href: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Click here!\"))));\n  });\n};\n\nexport default Login;","map":{"version":3,"sources":["A:\\HTML 5\\graphQL\\code\\project-create-react-app\\post-system\\src\\client\\components\\login.js"],"names":["React","useState","useEffect","createRef","useContext","AuthContext","gql","ApolloConsumer","functions","styledComponents","Content","LoginForm","LoginInput","LoginButton","AuthNotice","H1","P","A","writeToken","Login","props","value","authNotice","setAuthNotice","email","password","location","state","err","reqBody","client","event","preventDefault","query","variables","current","watchQuery","errorPolicy","then","res","data","login","error","tok","token","history","push","catch","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef, useContext } from \"react\"\r\nimport AuthContext from \"../context/AuthContext\"\r\nimport gql from \"graphql-tag\";\r\nimport { ApolloConsumer } from 'react-apollo';\r\nimport functions from \"../functions/functions\"\r\nimport styledComponents from \"../styled-components/styledComponents\"\r\nconst { Content, LoginForm, LoginInput, LoginButton, AuthNotice, H1, P, A } = styledComponents\r\nconst { writeToken } = functions\r\n\r\nconst Login = ( props ) => {\r\n\r\n\r\n   const value = useContext( AuthContext )\r\n   const [ authNotice, setAuthNotice ] = useState( null )\r\n   const email = createRef(),\r\n      password = createRef()\r\n\r\n   useEffect( () => {\r\n      try {\r\n         if ( props.location.state.authNotice ) { setAuthNotice( props.location.state.authNotice ) }\r\n      } catch ( err ) { return }\r\n   } )\r\n\r\n   let reqBody = gql `query Login($email: String!, $password: String!) {\r\n\t\tlogin(email: $email, password: $password) {\r\n\t\t\tuserId\r\n\t\t\temail\r\n\t\t\texp\r\n\t\t\ttoken\r\n\t\t\terror\r\n\t\t}\r\n\r\n\t}`\r\n\r\n   return (\r\n      <ApolloConsumer errorPolicy=\"all\" >\r\n\t\t{ client => {\r\n\t\t\treturn (  \r\n\t\t\t\t<Content>\r\n\t\t\t\t<LoginForm onSubmit={ (event) => {\r\n\t\t\t\t\tevent.preventDefault()\r\n\t\t\t\t\tclient.query({\r\n\t\t\t\t\t\tquery: reqBody,\r\n\t\t\t\t\t\tvariables: {email: email.current.value, password: password.current.value}\t,\r\n\t\t\t\t\t\twatchQuery: {\r\n\t\t\t\t\t\t\terrorPolicy: 'all',\r\n\t\t\t\t\t\t},\t\r\n\t\t\t\t\t}).then(res=> {\r\n\t\t\t\t\t\tif(res.data.login.error) {\r\n\t\t\t\t\t\t\tsetAuthNotice(res.data.login.error)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tconst tok = res.data.login.token\r\n\t\t\t\t\t\t\twriteToken(tok)\r\n\t\t\t\t\t\t\tvalue.login(res.data.login)\r\n\t\t\t\t\t\t\tprops.history.push( \"/members/posts\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(err=> console.log(err))\r\n\r\n\t\t\t\t}}>\r\n\t\t\t\t<H1>Login to Member Area</H1>\r\n\r\n\t\t\t\t{authNotice ? (<AuthNotice>{authNotice}</AuthNotice>) : null }\t\t\t\t\r\n\t\t\t\t<LoginInput type=\"email\" required maxlength=\"30\" name=\"email\" placeholder=\"Email...\" ref={email}/>\r\n\t\t\t\t<LoginInput type=\"password\" required maxlength=\"30\" name=\"password\" placeholder=\"Password...\" ref={password} />\r\n\r\n\t\t\t\t<LoginButton type=\"submit\"  >Sign in</LoginButton>\t\r\n\r\n\t\t\t\t<P>Don’t have an account yet? <A href=\"/signup\">Click here!</A></P>\r\n\t\t\t\t</LoginForm>\r\n\r\n\r\n\t\t\t\t</Content>\r\n\t\t\t\t)} }\r\n\t\t\t</ApolloConsumer>\r\n\r\n   )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}