{"ast":null,"code":"import _taggedTemplateLiteral from \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\src\\\\client\\\\components\\\\members\\\\myposts.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"mutation DeletePost($postId: String!,$comments: [String!]!){\\n      deletePost(postId: $postId, comments: $comments){\\n              _id\\n           }\\n      }\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"mutation EditPost($postId: String!,$title: String!, $description: String!) {\\n            editPost(postId: $postId, title: $title, description: $description) {\\n                  _id\\n            }\\n         }\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query  {\\n         getPosts(postId: \\\"myposts\\\") {\\n           title\\n           description\\n           updatedAt\\n           _id\\n           comments {\\n             _id\\n          }\\n          creator {\\n             firstName\\n             lastName\\n          }\\n       }\\n    }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useContext, createRef } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport fn from \"../../functions/functions\";\nimport gql from \"graphql-tag\";\nimport styledComponents from \"../../styled-components/styledComponents\";\nimport commentIcon from \"../../img/comment.png\";\nvar Content = styledComponents.Content,\n    SearchInput = styledComponents.SearchInput,\n    List = styledComponents.List,\n    ListTitle = styledComponents.ListTitle,\n    ListTitleDiv = styledComponents.ListTitleDiv,\n    Description = styledComponents.Description,\n    H3 = styledComponents.H3,\n    PostCommentArea = styledComponents.PostCommentArea,\n    Textarea = styledComponents.Textarea,\n    LoginButton = styledComponents.LoginButton,\n    EditBar = styledComponents.EditBar;\nvar imgStyleComment = {\n  width: \"23px\",\n  height: \"20px\",\n  paddingBottom: \"15px\"\n};\nvar purify = fn.purify;\n\nvar PostSnippet = function PostSnippet(props) {\n  var _props$post = props.post,\n      title = _props$post.title,\n      desc = _props$post.description,\n      updatedAt = _props$post.updatedAt,\n      comments = _props$post.comments;\n  var totalComents = comments.length;\n  var data = {\n    __html: desc\n  };\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(ListTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(H3, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, title), React.createElement(ListTitleDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"By: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"You\"), \" last updated on \", new Date(Number(updatedAt)).toLocaleDateString()), React.createElement(\"h2\", {\n    style: {\n      margin: \"2px\",\n      padding: \"`15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, totalComents, React.createElement(\"img\", {\n    src: commentIcon,\n    style: imgStyleComment,\n    alt: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), \"  \")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(EditBar, {\n    onClick: function onClick() {\n      return props.edit(props.post);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(EditBar, {\n    onClick: function onClick() {\n      return props.deletePost(props.post);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Delete\"))), React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    dangerouslySetInnerHTML: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n};\n\nvar EditPost = function EditPost(props) {\n  var _props$post2 = props.post,\n      title = _props$post2.title,\n      desc = _props$post2.description,\n      _id = _props$post2._id;\n  var titleEdited = createRef();\n  var descEdited = createRef();\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    props.editedPost(_id, purify(titleEdited.current.value), purify(descEdited.current.value));\n  };\n\n  return React.createElement(PostCommentArea, {\n    onSubmit: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(SearchInput, {\n    defaultValue: title,\n    ref: titleEdited,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Textarea, {\n    rows: \"20\",\n    defaultValue: desc,\n    ref: descEdited,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(LoginButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Update My Post\"));\n};\n\nvar MyPosts = function MyPosts(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      myPosts = _useState2[0],\n      setMyposts = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      edit = _useState4[0],\n      setEdit = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mutationMsg = _useState6[0],\n      setMutationMsg = _useState6[1];\n\n  var value = useContext(AuthContext);\n\n  var queryMyPosts = function queryMyPosts() {\n    var reqBody = gql(_templateObject());\n    value.client.query({\n      query: reqBody\n    }, {\n      options: {\n        errorPolicy: 'all',\n        fetchPolicy: \"no-cache\"\n      }\n    }).then(function (res) {\n      return setMyposts(res.data.getPosts);\n    }).catch(function (err) {\n      return props.history.push(\"/auth\");\n    });\n  };\n\n  useEffect(function () {\n    queryMyPosts();\n  }, []);\n\n  var editHandler = function editHandler(props) {\n    setMutationMsg(null);\n    setMyposts(null);\n    setEdit(props);\n  };\n\n  var editedPostHandler = function editedPostHandler(id, title, description) {\n    var mutBody = gql(_templateObject2());\n    value.client.mutate({\n      mutation: mutBody,\n      variables: {\n        postId: id,\n        title: title,\n        description: description\n      }\n    }).then(function (res) {\n      setMutationMsg(\"Your post is updated successfully!\");\n      queryMyPosts();\n      setEdit(null);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  var deletePostHandler = function deletePostHandler(props) {\n    var comments = props.comments.map(function (item) {\n      return item._id;\n    });\n    var mutBody = gql(_templateObject3());\n    value.client.mutate({\n      mutation: mutBody,\n      variables: {\n        postId: props._id,\n        comments: comments\n      }\n    }).then(function (res) {\n      setMutationMsg(\"Your post is removed successfully!\");\n      queryMyPosts();\n      setEdit(null);\n      console.log(res);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  return React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, mutationMsg ? React.createElement(H3, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, mutationMsg) : null, myPosts ? myPosts.map(function (item, i) {\n    return React.createElement(PostSnippet, {\n      post: item,\n      key: i,\n      edit: editHandler,\n      deletePost: deletePostHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    });\n  }) : null, edit ? React.createElement(EditPost, {\n    post: edit,\n    editedPost: editedPostHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }) : null);\n};\n\nexport default MyPosts;","map":{"version":3,"sources":["A:\\HTML 5\\graphQL\\code\\project-create-react-app\\post-system\\src\\client\\components\\members\\myposts.js"],"names":["React","useState","useEffect","useContext","createRef","AuthContext","fn","gql","styledComponents","commentIcon","Content","SearchInput","List","ListTitle","ListTitleDiv","Description","H3","PostCommentArea","Textarea","LoginButton","EditBar","imgStyleComment","width","height","paddingBottom","purify","PostSnippet","props","post","title","desc","description","updatedAt","comments","totalComents","length","data","__html","Date","Number","toLocaleDateString","margin","padding","edit","deletePost","EditPost","_id","titleEdited","descEdited","submitHandler","event","preventDefault","editedPost","current","value","MyPosts","myPosts","setMyposts","setEdit","mutationMsg","setMutationMsg","queryMyPosts","reqBody","client","query","options","errorPolicy","fetchPolicy","then","res","getPosts","catch","err","history","push","editHandler","editedPostHandler","id","mutBody","mutate","mutation","variables","postId","console","log","deletePostHandler","map","item","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, createRef } from \"react\"\r\nimport AuthContext from \"../../context/AuthContext\"\r\nimport fn from \"../../functions/functions\"\r\nimport gql from \"graphql-tag\";\r\nimport styledComponents from \"../../styled-components/styledComponents\"\r\nimport commentIcon from \"../../img/comment.png\"\r\nconst { Content, SearchInput, List, ListTitle, ListTitleDiv, Description, H3, PostCommentArea, Textarea, LoginButton, EditBar } = styledComponents\r\n\r\nconst imgStyleComment = { width: \"23px\", height: \"20px\", paddingBottom: \"15px\" }\r\nconst { purify } = fn\r\n\r\nconst PostSnippet = ( props ) => {\r\n\r\n   const { title, description: desc, updatedAt, comments } = props.post\r\n   const totalComents = comments.length\r\n   const data = { __html: desc };\r\n   return (\r\n      <List>\r\n         <ListTitle>\r\n            <H3>{title}</H3>\r\n            <ListTitleDiv\t>\r\n               <p >By: <b>You</b> last updated on {new Date(Number(updatedAt)).toLocaleDateString()}</p>\r\n               <h2 style={{margin: \"2px\", padding: \"`15px\"}}>{totalComents}<img src={commentIcon} style={imgStyleComment} alt=\"comments\"/>  </h2>\r\n            </ListTitleDiv>\t\t\r\n            <div>\r\n               <EditBar onClick={()=>props.edit(props.post)}>Edit</EditBar>\r\n               <EditBar onClick={()=>props.deletePost(props.post)}>Delete</EditBar>\r\n            </div>\t\r\n         </ListTitle>\r\n         <Description>\r\n            <p dangerouslySetInnerHTML={data} />\r\n         </Description>\r\n      </List>\r\n   )\r\n}\r\n\r\nconst EditPost = ( props ) => {\r\n\r\n   const { title, description: desc, _id } = props.post\r\n   const titleEdited = createRef()\r\n   const descEdited = createRef()\r\n\r\n   const submitHandler = ( event ) => {\r\n      event.preventDefault()\r\n      props.editedPost( _id, purify(titleEdited.current.value), purify(descEdited.current.value) )\r\n   }\r\n\r\n   return (\r\n      <PostCommentArea onSubmit={submitHandler}>\r\n         <br/><br/><br/>\r\n         <SearchInput defaultValue={title} ref={titleEdited}/>\r\n         <Textarea rows=\"20\" defaultValue={desc} ref={descEdited}></Textarea>\r\n         <LoginButton type=\"submit\">Update My Post</LoginButton>\r\n      </PostCommentArea>\r\n   )\r\n}\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n   const [ myPosts, setMyposts ] = useState( null )\r\n   const [ edit, setEdit ] = useState( null )\r\n   const [ mutationMsg, setMutationMsg ] = useState( null )\r\n   const value = useContext( AuthContext )\r\n\r\n   const queryMyPosts = () => {\r\n      const reqBody = gql `query  {\r\n         getPosts(postId: \"myposts\") {\r\n           title\r\n           description\r\n           updatedAt\r\n           _id\r\n           comments {\r\n             _id\r\n          }\r\n          creator {\r\n             firstName\r\n             lastName\r\n          }\r\n       }\r\n    }`\r\n      value.client.query( { query: reqBody }, {\r\n            options: {\r\n               errorPolicy: 'all',\r\n               fetchPolicy: \"no-cache\"\r\n            }\r\n         }, )\r\n         .then( res => setMyposts( res.data.getPosts ) ).catch( err => props.history.push( \"/auth\" ) )\r\n   }\r\n\r\n   useEffect( () => {\r\n      queryMyPosts()\r\n   }, [] )\r\n\r\n   const editHandler = ( props ) => {\r\n      setMutationMsg( null )\r\n      setMyposts( null )\r\n      setEdit( props )\r\n\r\n   }\r\n\r\n   const editedPostHandler = ( id, title, description ) => {\r\n      const mutBody = gql `mutation EditPost($postId: String!,$title: String!, $description: String!) {\r\n            editPost(postId: $postId, title: $title, description: $description) {\r\n                  _id\r\n            }\r\n         }`\r\n\r\n      value.client.mutate( {\r\n            mutation: mutBody,\r\n            variables: { postId: id, title: title, description: description }\r\n         } )\r\n         .then( res => {\r\n            setMutationMsg( \"Your post is updated successfully!\" )\r\n            queryMyPosts()\r\n            setEdit( null )\r\n         } ).catch( err => console.log( err ) )\r\n   }\r\n\r\n   const deletePostHandler = ( props ) => {\r\n\r\n      const comments = props.comments.map( item => item._id )\r\n      const mutBody = gql `mutation DeletePost($postId: String!,$comments: [String!]!){\r\n      deletePost(postId: $postId, comments: $comments){\r\n              _id\r\n           }\r\n      }`\r\n\r\n      value.client.mutate( {\r\n            mutation: mutBody,\r\n            variables: { postId: props._id, comments: comments }\r\n         } )\r\n         .then( res => {\r\n            setMutationMsg( \"Your post is removed successfully!\" )\r\n            queryMyPosts()\r\n            setEdit( null )\r\n            console.log( res )\r\n         } ).catch( err => console.log( err ) )\r\n   }\r\n\r\n   return (\r\n      <Content>\r\n      \r\n         { mutationMsg ?  (<H3>{mutationMsg}</H3>) : null}\r\n         {myPosts ?  myPosts.map( (item, i) => {\r\n            return (<PostSnippet post={item}  key={i} edit={editHandler} deletePost={deletePostHandler}/>)\r\n         })   : null}\r\n\r\n         {edit ?  ( <EditPost post={edit} editedPost={editedPostHandler}  />) : null }\r\n\r\n      </Content>\r\n      )\r\n}\r\nexport default MyPosts"]},"metadata":{},"sourceType":"module"}