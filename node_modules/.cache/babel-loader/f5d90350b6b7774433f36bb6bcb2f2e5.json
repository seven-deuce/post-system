{"ast":null,"code":"import _taggedTemplateLiteral from \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\src\\\\client\\\\components\\\\members\\\\sub\\\\fullpost.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"mutation PostComment($description: String!, $userId: String!,  $postId: String! ){\\n\\t\\t\\tpostComment(description: $description, userId:$userId, postId: $postId){\\n\\t\\t\\t\\t_id\\n\\t\\t\\t}\\n\\t\\t}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment, useState, useContext, createRef } from \"react\";\nimport AuthContext from \"../../../context/AuthContext\";\nimport gql from \"graphql-tag\";\nimport commentIcon from \"../../../img/comment.png\";\nimport BackButton from \"./backbutton\";\nimport fn from \"../../../functions/functions\";\nimport styledComponents from \"../../../styled-components/styledComponents\";\nvar List = styledComponents.List,\n    ListTitle = styledComponents.ListTitle,\n    ListTitleDiv = styledComponents.ListTitleDiv,\n    Description = styledComponents.Description,\n    H3 = styledComponents.H3,\n    AA = styledComponents.AA,\n    PostCommentArea = styledComponents.PostCommentArea,\n    Textarea = styledComponents.Textarea,\n    LoginButton = styledComponents.LoginButton,\n    ListComment = styledComponents.ListComment,\n    CommentsWrapper = styledComponents.CommentsWrapper;\nvar imgStyleComment = {\n  width: \"23px\",\n  height: \"20px\",\n  paddingBottom: \"15px\"\n};\nvar purify = fn.purify;\n\nvar Comments = function Comments(props) {\n  var comment = props.post;\n  var desc = comment.description,\n      createdAt = comment.createdAt,\n      creatorName = comment.creatorName;\n  var data = {\n    __html: desc\n  };\n  return React.createElement(ListComment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(ListTitle, {\n    style: {\n      backgroundColor: \"#66a3ff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(H3, {\n    style: {\n      paddingTop: \"0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, creatorName, \" replied on \", new Date(Number(createdAt)).toLocaleDateString()), React.createElement(ListTitleDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(Description, {\n    style: {\n      borderColor: \"#66a3ff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    dangerouslySetInnerHTML: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n};\n\nvar PostComment = function PostComment(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      postDoneMsg = _useState2[0],\n      setPostDoneMsg = _useState2[1];\n\n  var value = useContext(AuthContext);\n  var description = createRef();\n\n  var postComment = function postComment(event) {\n    event.preventDefault();\n    var mutBody = gql(_templateObject());\n    var variables = {\n      description: purify(description.current.value),\n      userId: value.auth.userId,\n      postId: props.postId\n    };\n    value.client.mutate({\n      mutation: mutBody,\n      variables: variables\n    }).then(function (res) {\n      return setPostDoneMsg(true);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  return React.createElement(PostCommentArea, {\n    onSubmit: postComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Textarea, {\n    rows: \"8\",\n    placeholder: \"Post your comment here...\",\n    ref: description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(LoginButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Post Reply\"), postDoneMsg ? React.createElement(H3, {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Your comment is submitted successfully!\") : null);\n};\n\nvar FullPost = function FullPost(props) {\n  var _props$post = props.post,\n      title = _props$post.title,\n      desc = _props$post.description,\n      createdAt = _props$post.createdAt,\n      comments = _props$post.comments,\n      _id = _props$post._id;\n  var totalComents = comments.length;\n  var creator = props.post.creator.firstName + \" \" + props.post.creator.lastName;\n  var data = {\n    __html: desc\n  };\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(ListTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(H3, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(AA, {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, title)), React.createElement(ListTitleDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"By: \", creator, \" on \", new Date(Number(createdAt)).toLocaleDateString()), React.createElement(\"h2\", {\n    style: {\n      margin: \"2px\",\n      padding: \"`15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, totalComents, React.createElement(\"img\", {\n    src: commentIcon,\n    style: imgStyleComment,\n    alt: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), \"  \"))), React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    dangerouslySetInnerHTML: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), React.createElement(PostComment, {\n    postId: _id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(CommentsWrapper, {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, comments.map(function (item, i) {\n    return React.createElement(Comments, {\n      post: item,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    });\n  })), React.createElement(BackButton, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })));\n};\n\nexport default FullPost;","map":{"version":3,"sources":["A:\\HTML 5\\graphQL\\code\\project-create-react-app\\post-system\\src\\client\\components\\members\\sub\\fullpost.js"],"names":["React","Fragment","useState","useContext","createRef","AuthContext","gql","commentIcon","BackButton","fn","styledComponents","List","ListTitle","ListTitleDiv","Description","H3","AA","PostCommentArea","Textarea","LoginButton","ListComment","CommentsWrapper","imgStyleComment","width","height","paddingBottom","purify","Comments","props","comment","post","desc","description","createdAt","creatorName","data","__html","backgroundColor","paddingTop","Date","Number","toLocaleDateString","borderColor","PostComment","postDoneMsg","setPostDoneMsg","value","postComment","event","preventDefault","mutBody","variables","current","userId","auth","postId","client","mutate","mutation","then","res","catch","err","console","log","textAlign","FullPost","title","comments","_id","totalComents","length","creator","firstName","lastName","margin","padding","display","flexDirection","map","item","i"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useContext, createRef } from \"react\"\r\nimport AuthContext from \"../../../context/AuthContext\"\r\nimport gql from \"graphql-tag\";\r\nimport commentIcon from \"../../../img/comment.png\"\r\nimport BackButton from \"./backbutton\"\r\nimport fn from \"../../../functions/functions\"\r\nimport styledComponents from \"../../../styled-components/styledComponents\"\r\nconst { List, ListTitle, ListTitleDiv, Description, H3, AA, PostCommentArea, Textarea, LoginButton, ListComment, CommentsWrapper } = styledComponents\r\n\r\nconst imgStyleComment = { width: \"23px\", height: \"20px\", paddingBottom: \"15px\" }\r\nconst { purify } = fn\r\n\r\nconst Comments =  (props) => {\r\n\r\n\tconst comment = props.post\r\n\tconst { description: desc, createdAt, creatorName  } = comment\r\n\tconst data = { __html: desc }\r\n\r\n\treturn (\r\n\r\n\t\t<ListComment>\r\n\t\t\t<ListTitle style={{backgroundColor: \"#66a3ff\"}}>\r\n\t\t\t\t<H3 style={{paddingTop: \"0\"}}>{creatorName} replied on {new Date(Number(createdAt)).toLocaleDateString()}</H3>\r\n\t\t\t\t<ListTitleDiv\t>\r\n\r\n\t\t\t\t</ListTitleDiv>\t\t\t\t\r\n\r\n\t\t\t</ListTitle>\r\n\t\t\t<Description style={{borderColor: \"#66a3ff\"}} >\r\n\t\t\t\t<p dangerouslySetInnerHTML={data} />\r\n\t\t\t</Description>\r\n\t\t</ListComment>\r\n\t\t)\r\n}\r\n\r\nconst PostComment = (props) => {\r\n\tconst [ postDoneMsg, setPostDoneMsg ] = useState( false )\r\n\tconst value = useContext( AuthContext )\r\n\tconst description = createRef()\r\n\t\r\n\tconst postComment = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tconst mutBody = gql`mutation PostComment($description: String!, $userId: String!,  $postId: String! ){\r\n\t\t\tpostComment(description: $description, userId:$userId, postId: $postId){\r\n\t\t\t\t_id\r\n\t\t\t}\r\n\t\t}`\r\n\t\tconst variables = {description: purify(description.current.value), userId: value.auth.userId, postId: props.postId} \r\n\t\tvalue.client.mutate({\r\n\t\t\tmutation: mutBody, \r\n\t\t\tvariables: variables\r\n\t\t})\r\n\t\t.then(res => setPostDoneMsg(true)).catch(err=> console.log(err))\r\n\t}\r\n\r\n\treturn (\r\n\r\n\t\t<PostCommentArea onSubmit={postComment} >\r\n\t\t<Textarea rows=\"8\" placeholder=\"Post your comment here...\" ref={description} />\t\t\r\n\t\t<LoginButton type=\"submit\">Post Reply</LoginButton>\r\n\t\t{postDoneMsg ? <H3 style={{textAlign: \"center\"}}>Your comment is submitted successfully!</H3> : null}\r\n\t\t</PostCommentArea>\r\n\r\n\t\t)\r\n}\r\n\r\nconst FullPost = ( props ) => {\r\n\tconst { title, description: desc, createdAt, comments, _id } = props.post\r\n\tconst totalComents = comments.length\r\n\tconst creator = props.post.creator.firstName + \" \" + props.post.creator.lastName\r\n\tconst data = { __html: desc };\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<List>\r\n\t\t\t\t<ListTitle>\r\n\t\t\t\t\t<H3 ><AA href=\"#\">{title}</AA></H3>\r\n\t\t\t\t<ListTitleDiv\t>\r\n\t\t\t\t\t<p >By: {creator} on {new Date(Number(createdAt)).toLocaleDateString()}</p>\r\n\t\t\t\t\t<h2 style={{margin: \"2px\", padding: \"`15px\"}}>{totalComents}<img src={commentIcon} style={imgStyleComment} alt=\"comments\"/>  </h2>\r\n\r\n\t\t\t\t</ListTitleDiv>\t\t\t\t\r\n\r\n\t\t\t\t</ListTitle>\r\n\t\t\t\t<Description>\r\n\t\t\t\t\t<p dangerouslySetInnerHTML={data} />\r\n\t\t\t\t</Description>\r\n\t\t\t</List>\r\n\r\n\t\t\t<PostComment postId={_id} />\r\n\r\n\t\t\t<CommentsWrapper style={{display: \"flex\", flexDirection: \"column\"}}  >\r\n\t\t\t\t{comments.map((item, i)=>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Comments post={item} key={i}/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t\r\n\t\t\t</CommentsWrapper>\r\n\t\t\t<BackButton {...props} />\r\n\t\t</Fragment>\r\n\t\t)\r\n}\r\n\r\nexport default FullPost"]},"metadata":{},"sourceType":"module"}