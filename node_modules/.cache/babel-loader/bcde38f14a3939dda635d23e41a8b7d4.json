{"ast":null,"code":"import _taggedTemplateLiteral from \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"A:\\\\HTML 5\\\\graphQL\\\\code\\\\project-create-react-app\\\\post-system\\\\src\\\\client\\\\components\\\\members\\\\posts.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query {\\n\\t\\tgetPosts(postId: \\\"all\\\") {\\n\\t\\t\\ttitle\\n\\t\\t\\tdescription\\n\\t\\t\\t_id\\n\\t\\t\\tcomments {\\n\\t\\t\\t\\tdescription\\n\\t\\t\\t\\tcreatedAt\\n\\t\\t\\t\\tcreatorName\\n\\t\\t\\t}\\n\\t\\t\\tcreatedAt\\n\\t\\t\\tcreator {\\n\\t\\t\\t\\tfirstName\\n\\t\\t\\t\\tlastName\\n\\t\\t\\t}\\n\\t\\t\\terror\\n\\n\\t\\t}\\n\\t}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { Query } from 'react-apollo';\nimport styledComponents from \"../../styled-components/styledComponents\";\nimport SearchBar from \"./sub/search\";\nimport EachPost from \"./sub/eachpost\";\nimport FullPost from \"./sub/fullpost\";\nimport BackButton from \"./sub/backbutton\";\nvar Content = styledComponents.Content;\n\nvar Posts = function Posts(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchItem = _useState2[0],\n      setSearchItem = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fullView = _useState4[0],\n      setFullView = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showBack = _useState6[0],\n      setShowBack = _useState6[1];\n\n  var reqBody = gql(_templateObject());\n\n  var search = function search(string) {\n    setSearchItem(string);\n  };\n\n  return React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    search: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Query, {\n    query: reqBody,\n    fetchPolicy: \"network-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, function (_ref) {\n    var loading = _ref.loading,\n        error = _ref.error,\n        data = _ref.data;\n    if (loading) return React.createElement(\"div\", {\n      className: \"lds-roller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n\n    if (error) {\n      return React.createElement(Redirect, {\n        to: \"/auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    }\n\n    if (data) {\n      if (fullView) {\n        return React.createElement(FullPost, {\n          post: fullView,\n          fullView: setFullView,\n          backAction: setFullView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      }\n\n      return data.getPosts.map(function (item, i) {\n        if (!searchItem) {\n          setShowBack(false);\n          return React.createElement(EachPost, {\n            post: item,\n            key: item._id,\n            fullView: setFullView,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          });\n        } else if (searchItem) {\n          var patt = new RegExp(searchItem, \"gi\");\n\n          if (patt.test(item.title) || patt.test(item.description)) {\n            return React.createElement(\"div\", {\n              key: item._id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, React.createElement(EachPost, {\n              post: item,\n              key: item._id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }));\n          } else {\n            setShowBack(true);\n          }\n        }\n      });\n    }\n  }), showBack ? React.createElement(BackButton, {\n    backAction: setSearchItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }) : null);\n};\n\nexport default Posts;","map":{"version":3,"sources":["A:\\HTML 5\\graphQL\\code\\project-create-react-app\\post-system\\src\\client\\components\\members\\posts.js"],"names":["React","useState","Redirect","gql","Query","styledComponents","SearchBar","EachPost","FullPost","BackButton","Content","Posts","props","searchItem","setSearchItem","fullView","setFullView","showBack","setShowBack","reqBody","search","string","loading","error","data","getPosts","map","item","i","_id","patt","RegExp","test","title","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport {  Redirect } from \"react-router-dom\"\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from 'react-apollo';\r\nimport styledComponents from \"../../styled-components/styledComponents\"\r\nimport SearchBar from \"./sub/search\"\r\nimport EachPost from \"./sub/eachpost\"\r\nimport FullPost from \"./sub/fullpost\"\r\nimport BackButton from \"./sub/backbutton\"\r\nconst { Content } = styledComponents\r\n\r\nconst Posts = ( props ) => {\r\n\r\n\tconst [ searchItem, setSearchItem ] = useState( null )\r\n\tconst [ fullView, setFullView ] = useState( null )\r\n\tconst [ showBack, setShowBack] = useState( false )\r\n\r\n\tconst reqBody = gql `query {\r\n\t\tgetPosts(postId: \"all\") {\r\n\t\t\ttitle\r\n\t\t\tdescription\r\n\t\t\t_id\r\n\t\t\tcomments {\r\n\t\t\t\tdescription\r\n\t\t\t\tcreatedAt\r\n\t\t\t\tcreatorName\r\n\t\t\t}\r\n\t\t\tcreatedAt\r\n\t\t\tcreator {\r\n\t\t\t\tfirstName\r\n\t\t\t\tlastName\r\n\t\t\t}\r\n\t\t\terror\r\n\r\n\t\t}\r\n\t}`\r\n\tconst search = ( string ) => {\r\n\t\tsetSearchItem( string )\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Content>\r\n\t\t<SearchBar search={search} />\r\n\t\t<Query query={reqBody} fetchPolicy=\"network-only\">\r\n\t\t{({ loading, error, data }) => {\r\n\t\t\tif (loading) return (<div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>)\r\n\t\t\t\tif(error)  {  return <Redirect to=\"/auth\" />}\r\n\t\t\t\t\tif(data) {\r\n\t\t\t\t\t\tif(fullView) {return ( <FullPost post={fullView} fullView={setFullView} backAction={setFullView}/>)  }\r\n\t\t\t\t\t\t\treturn (\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tdata.getPosts.map((item, i) => {\r\n\t\t\t\t\t\t\t\t\tif(!searchItem) {\r\n\t\t\t\t\t\t\t\t\t\tsetShowBack(false)\r\n\t\t\t\t\t\t\t\t\t\treturn ( \t<EachPost post={item} key={item._id}  fullView={setFullView}/> )\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (searchItem) { \r\n\t\t\t\t\t\t\t\t\t\tconst patt = new RegExp(searchItem, \"gi\")\r\n\t\t\t\t\t\t\t\t\t\tif( patt.test(item.title) || patt.test(item.description) ) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn ( \t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={item._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<EachPost post={item} key={item._id}/> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\t\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse { setShowBack(true)}\r\n\t\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t) \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t</Query>\r\n\t\t\t{showBack ? <BackButton backAction={setSearchItem} /> : null}\r\n\t\t\t</Content>\r\n\t\t\t)\r\n}\r\n\r\nexport default Posts\r\n\r\n"]},"metadata":{},"sourceType":"module"}